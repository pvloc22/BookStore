CREATE TRIGGER TOTALPRICE_I ON DETAILED_TRANS
FOR INSERT
AS 
BEGIN

    DECLARE @TID VARCHAR(7) =  (SELECT TID FROM inserted)
    DECLARE @PRICE FLOAT = (SELECT CURRENTPRICE FROM inserted)
    DECLARE @DURATION FLOAT = (SELECT CURRENTDURATION FROM inserted)
    DECLARE @TOTAPRICE FLOAT = (SELECT TOTALPRICE FROM TRANSACTIONS WHERE TID = @TID)
    DECLARE @TOTALDURATION INT = (SELECT TOTALDURATION FROM TRANSACTIONS WHERE TID = @TID)

    IF(@TOTAPRICE IS NULL)
    BEGIN 
        UPDATE TRANSACTIONS
        SET TOTALPRICE = 0
        WHERE TID = @TID
    END

    IF(@TOTALDURATION IS NULL)
    BEGIN
        UPDATE TRANSACTIONS
        SET TOTALDURATION = 0
        WHERE TID = @TID
    END 

    UPDATE TRANSACTIONS SET TOTALPRICE = TOTALPRICE + @PRICE WHERE TID = @TID
    UPDATE TRANSACTIONS SET TOTALDURATION = TOTALDURATION + @DURATION WHERE TID = @TID

END
GO

CREATE TRIGGER TOTALPRICE_D ON DETAILED_TRANS
FOR DELETE
AS 
BEGIN

    DECLARE @TID VARCHAR(7) =  (SELECT TID FROM deleted)
    DECLARE @PRICE FLOAT = (SELECT CURRENTPRICE FROM deleted)
    DECLARE @DURATION FLOAT = (SELECT CURRENTDURATION FROM deleted)
    DECLARE @TOTAPRICE FLOAT = (SELECT TOTALPRICE FROM TRANSACTIONS WHERE TID = @TID)
    DECLARE @TOTALDURATION INT = (SELECT TOTALDURATION FROM TRANSACTIONS WHERE TID = @TID)

    IF(@TOTAPRICE IS NULL)
    BEGIN 
        UPDATE TRANSACTIONS
        SET TOTALPRICE = 0
        WHERE TID = @TID
        RETURN
    END

    IF(@TOTALDURATION IS NULL)
    BEGIN
        UPDATE TRANSACTIONS
        SET TOTALDURATION = 0
        WHERE TID = @TID
        RETURN
    END 


    UPDATE TRANSACTIONS SET TOTALPRICE = TOTALPRICE - @PRICE WHERE TID = @TID
    UPDATE TRANSACTIONS SET TOTALDURATION = TOTALDURATION - @DURATION WHERE TID = @TID
END

---QUANTITY
GO
CREATE TRIGGER QUANTITY_I ON DETAILED_TRANS
FOR INSERT
AS 
BEGIN

    DECLARE @TID VARCHAR(7) =  (SELECT TID FROM inserted)

    DECLARE @QUANTITY INT = (SELECT QUANTITY FROM TRANSACTIONS WHERE TID = @TID)

    IF(@QUANTITY IS NULL)
    BEGIN 
        UPDATE TRANSACTIONS
        SET QUANTITY = 0
        WHERE TID = @TID
    END

    UPDATE TRANSACTIONS SET QUANTITY = QUANTITY + 1 WHERE TID = @TID
END

GO
CREATE TRIGGER QUANTITY_D ON DETAILED_TRANS
FOR DELETE
AS 
BEGIN

    DECLARE @TID VARCHAR(7) =  (SELECT TID FROM deleted)

    DECLARE @QUANTITY INT = (SELECT QUANTITY FROM TRANSACTIONS WHERE TID = @TID)

    IF(@QUANTITY IS NULL)
    BEGIN 
        UPDATE TRANSACTIONS
        SET QUANTITY = 0
        WHERE TID = @TID
        RETURN
    END

    UPDATE TRANSACTIONS SET QUANTITY = QUANTITY - 1 WHERE TID = @TID
END
